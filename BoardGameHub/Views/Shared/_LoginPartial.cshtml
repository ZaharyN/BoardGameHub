@using BoardGameHub.Data.Data.DataModels
@using Microsoft.AspNetCore.Identity
@using BoardGameHub.Core.Contracts;
@using BoardGameHub.Core.Services;
@using System.Security.Claims

@inject SignInManager<ApplicationUser> SignInManager;
@inject UserManager<ApplicationUser> UserManager;
@inject IApplicationUserService userService;

@{
	string userName = string.Empty;

	@if (SignInManager.IsSignedIn(User))
	{
		userName = User.FindFirstValue(UserFullNameClaim) ?? string.Empty;
	}
}
<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @userName!</a>
		</li>
		@if (User.IsAdmin())
		{
			<li class="nav-item">
				<form class="form-inline h-100" asp-area="Admin" asp-controller="Home" asp-action="Index">
					<button type="submit" class="nav-link btn btn-link text-dark h-100 p-2">Admin area</button>
				</form>
			</li>
		}
		<li class="nav-item">
			<form class="form-inline h-100 " asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="/Identity/Account/Login">
				<button type="submit" class="nav-link btn btn-link text-dark h-100 p-2">Logout</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
		</li>
	}
</ul>
